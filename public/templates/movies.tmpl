

<div ng-app="movieApp">
	<!-- <label for="name">Name (data binding):</label>
	<input type="text" name="name" ng-model="name"> 
	{{name }}

	<div ng-controller="SimpleController">
		<ul>
			<li ng-repeat="customer in customers | filter:name | orderBy:'city'" >{{customer.name}} - {{customer.city}}</li> <!-- city in quotes gets property rather than name -->

		<!-- </ul>

	</div> --> 

	<div ng-controller="movieController">
		<ul>
			<li ng-repeat="movie in movies">{{movie.original_title}}</li>
		</ul>
	</div>
	<div ng-view=""></div>
</div>
<script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
<script src="/js/angular.js"></script>
<script src="/js/angular-route.js"></script> <!-- old angular routing was deprecated in 1.2, added as sep module -->
<script>

	var developerKey = "6f94caa6ae73a84da6f7657b8c2089a8";

	var movieApp = angular.module("movieApp",[]);//module (app)

	movieApp.controller("movieController", function($scope,movieFactory){//controllers //include scope and factories/services/etc as 
		 movieFactory.getMovies()
		 	.then(function(data){
		 		$scope.movies = data.results;
		 		// console.log($scope.movies);//moviedb returns json 'results' object with movies
		 	})
			

	});

	movieApp.factory('movieFactory', ['$http','$q', function($http,$q){ //inject http (list as param $http) if you want to make .get call here; use aliases; q is for promise (then)
		//if this were a service, use this keyword
		var title = "Tomatoes";
		var url = "http://api.themoviedb.org/3/search/movie?api_key=" + developerKey + "&query=" + title;

		var factory = {};
		factory.getMovies=function(){
			var deferred = $q.defer();
			var movies =[];
			$http.get(url).success(function(data, status, headers, config){
				deferred.resolve(data);
			}).error(function (data, status, headers, config) {
               deferred.reject(data);
           });
			
			return deferred.promise;
		};
		return factory;
	}]);



</script>