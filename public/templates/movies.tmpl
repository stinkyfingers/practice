

<div ng-app="movieApp">
	<div ng-controller="movieController">
		<label for="name">Name (data binding):</label>
		<input type="text" name="name" ng-model="movie.name"> 
		<p>{{movie.name }}</p>
		<button id="search">Search</button>



		<ul>
			<li ng-repeat="movie in movies">{{movie.original_title}}</li>
		</ul>
	</div>
	<div ng-view=""></div>
</div>
<script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
<script src="/js/angular.js"></script>
<script src="/js/angular-route.js"></script> <!-- old angular routing was deprecated in 1.2, added as sep module -->
<script>

	var developerKey = "6f94caa6ae73a84da6f7657b8c2089a8";

	var movieApp = angular.module("movieApp",[]);//module (app)

	movieApp.controller("movieController", function($scope,movieFactory){//controllers //include scope and factories/services/etc as 
		$scope.movie = {name:''};
		$("#search").click(function(){
			 movieFactory.getMovies($scope.movie)
			 	.then(function(data){
			 		$scope.movies = data.results;
			 		// console.log($scope.movies);//moviedb returns json 'results' object with movies
			 	});
			 });
	});

	movieApp.factory('movieFactory', ['$http','$q', function($http,$q){ //inject http (list as param $http) if you want to make .get call here; use aliases; q is for promise (then)
		//if this were a service, use this keyword
		var url = "http://api.themoviedb.org/3/search/movie?api_key=" + developerKey + "&query=";

		var factory = {};
		factory.getMovies=function(movie){
			console.log(movie.name); //movie passed to getMovies
			var deferred = $q.defer();
			var movies =[];
			$http.get(url+movie.name).success(function(data, status, headers, config){
				deferred.resolve(data);
			}).error(function (data, status, headers, config) {
               deferred.reject(data);
           });
			
			return deferred.promise;
		};
		return factory;
	}]);



</script>